pipeline {
    agent {
      <% if (agent.type === 'docker' && agent.image) { %>
      docker {
        image '<%= agent.image %>'
        <% if (agent.label) { %> label '<%= agent.label %>' <% } %>
      }
      <% } else if (agent.type === 'kubernetes') { %>
      kubernetes {
        // Kubernetes agent config here
      }
      <% } else { %>
      any
      <% } %>
    }
  
    <% if (environment) { %>
    environment {
      <% for (let key in environment) { %>
      <%= key %> = '<%= environment[key] %>'
      <% } %>
    }
    <% } %>
  
    <% if (triggers && (triggers.cron || triggers.pollSCM || triggers.upstream)) { %>
    triggers {
      <% if (triggers.cron) { %> cron('<%= triggers.cron %>') <% } %>
      <% if (triggers.pollSCM) { %> pollSCM('<%= triggers.pollSCM %>') <% } %>
      <% if (triggers.upstream) { %> upstream('<%= triggers.upstream %>') <% } %>
    }
    <% } %>
  
    stages {
      <% stages.forEach(stage => { %>
        <% if (stage.parallel && stage.parallel.length > 0) { %>
          stage('<%= stage.name %>') {
            parallel {
              <% stage.parallel.forEach(par => { %>
                '<%= par.name %>' {
                  steps {
                    <% par.steps?.forEach(step => { %>
                      <%- include('step', { step }) %>
                    <% }) %>
                  }
                }
              <% }) %>
            }
          }
        <% } else { %>
          stage('<%= stage.name %>') {
            <% if (stage.condition) { %>
            when {
              expression {
                return <%= stage.condition %>
              }
            }
            <% } %>
            steps {
              <% stage.steps?.forEach(step => { %>
                <%- include('step', { step }) %>
              <% }) %>
            }
          }
        <% } %>
      <% }) %>
    }
  
    <% if (post) { %>
    post {
      <% for (let key in post) { %>
        <% if (post[key].length > 0) { %>
          <%= key %> {
            <% post[key].forEach(line => { %>
              <%- line %>
            <% }) %>
          }
        <% } %>
      <% } %>
    }
    <% } %>
  }
  